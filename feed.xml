<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>r7kamura.com</title>
  <link rel="self" type="application/atom+xml" href="https://r7kamura.com/feed.xml"/>
  <link rel="alternate" type="text/html" href="https://r7kamura.com/"/>
  <updated>2020-09-19T00:17:24+00:00</updated>
  <author>
    <name>Ryo Nakamura</name>
  </author>
  <id>tag:r7kamura.com,2019:/</id>
  
    <entry>
      <title>AnkerのUSBハブを買った</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-09-19-anker-usb-hub"/>
      <id>tag:r7kamura.com,2019:/articles/2020-09-19-anker-usb-hub</id>
      <published>2020-09-19T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;&lt;a href=&quot;/images/2020-09-19-anker-usb-hub.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/2020-09-19-anker-usb-hub.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;『&lt;a href=&quot;https://www.amazon.co.jp/dp/B087TB7YM7?tag=r7kamura07-22&quot;&gt;Anker PowerExpand 8-in-1 USB-C PD 10Gbps データ ハブ&lt;/a&gt;』を買った。&lt;/p&gt;

&lt;p&gt;MacBook Proへの配線を1つにまとめるために、以下の用途で使っている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;USB Type-Aでコンデンサマイクと繋ぐ&lt;/li&gt;
&lt;li&gt;USB Type-Aでオーディオインターフェースと繋ぐ&lt;/li&gt;
&lt;li&gt;USB Type-CでWebカメラと繋ぐ&lt;/li&gt;
&lt;li&gt;USB Type-Cで給電する&lt;/li&gt;
&lt;li&gt;HDMIで外部ディスプレイと繋ぐ&lt;/li&gt;
&lt;li&gt;Ethernetでルータと繋ぐ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;やりたいことが全部満たせて概ね満足。&lt;/p&gt;

&lt;p&gt;電源周りについての注意点。MacBook Pro 13inch用の純正電源アダプタを使うと、13inchに接続しても電力が足りないのか給電されなかった。たまたま持っていた15inch用の電源アダプタを使ったら上手くいった。15Wがハブへの給電に利用されると書いてあるので、余裕のある電源アダプタじゃないと駄目みたい。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;ところで、これはこのUSBハブの話とは全く関係無い話なのだけど、電源アダプタ、ミキサー、USBマイクに繋いだMacBook Proからアナログ音声出力を取ろうとすると、自分の環境だとうるさいくらいのノイズが乗ってしまうという問題に遭遇した。&lt;/p&gt;

&lt;p&gt;調査を進めた結果、2つのPC間でマイクとミキサーを経由してグラウンドループが発生していることが判明。過去にもたまに同じ問題に遭遇することがあって不思議に思っていたけど、原因がようやく判明してスッキリ。&lt;/p&gt;

&lt;p&gt;グラウンドループはなかなか気付きづらい問題で、例えばキャプチャーボードに繋いだSwitchから音声をアナログ出力経由で取ろうとすると、同様の問題が起こったりする。解決策としては、経路の一部をアナログ音声からデジタル音声経由に変えたり、音質が多少損なわれても良い場合はグラウンドループ・アイソレーターを間に挟んだりする方法がある。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>記事内の画像にリンクを付けた</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-09-18-link-image"/>
      <id>tag:r7kamura.com,2019:/articles/2020-09-18-link-image</id>
      <published>2020-09-18T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;これで画像をクリックすると大きく表示できるようになった。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2020-09-18-link-image.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/2020-09-18-link-image.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;特に脈絡の無いサメのぬいぐるみの画像。&lt;/p&gt;

&lt;h2&gt;仕組み&lt;/h2&gt;

&lt;p&gt;もともとこのウェブサイトの記事本文のHTMLは、Markdownで書かれた文字列をHTML形式の木構造に変換し、それをまた文字列に変換する、という方法で生成されていた。今回はこの処理の途中に少し手を加え、木構造に含まれるimg要素をa要素で囲む、という処理を加えることにした。&lt;/p&gt;

&lt;p&gt;具体的には、木構造に変換フィルター群を適用して別の木構造にしていく、というパターンで実装している。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/r7kamura/r7kamura.com/pull/11&quot;&gt;https://github.com/r7kamura/r7kamura.com/pull/11&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;思い出&lt;/h2&gt;

&lt;p&gt;こういうのは独自記法を実装するときの常套手段で、例えばQiitaやQiita:TeamのMarkdownパーサーなんかも同じ仕組みで実装されている。&lt;/p&gt;

&lt;p&gt;当時、emojiやmention、他の記事への言及、外部リンク、シンタックスハイライトやタスクリストなど、Markdownパーサの仕事は日に日に増えつつあり、この要求に耐え得るべく2014年頃に自分が実装し直したものがこれで、今でもまだ元気に動いているはず。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/increments/qiita-markdown&quot;&gt;https://github.com/increments/qiita-markdown&lt;/a&gt;&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>何も書かれていないテストファイルを消す</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-09-17-empty-test-files"/>
      <id>tag:r7kamura.com,2019:/articles/2020-09-17-empty-test-files</id>
      <published>2020-09-17T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;雑なスクリプトを書いて空のテストファイルを消したという話。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require &#39;pathname&#39;

Pathname.glob(&#39;spec/**/*_spec.rb&#39;).each do |pathname|
  if pathname.each_line.count &amp;lt; 10 &amp;amp;&amp;amp; !pathname.read.match?(/\bit\b/)
    puts pathname
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;特にRailsのようなomakaseを志向したフレームワークなんかは、ファイルジェネレーターの支援が手厚く、モデルなんかをつくろうとしたときに自動的に実装とテストファイルの雛形を自動生成してくれたりする。そういうものを気にせず放置していると、何も定義されていない空のファイルが大量に溜まっていったりするので、気を付けていないとたまにこういう活動が必要になる。&lt;/p&gt;

&lt;p&gt;rubocop-rspecのRSpec/EmptyExampleGroupというCopでもこういうものは検知できると思う。このプロジェクトでは現在たまたまそれをすぐに利用できる状態に無かったので、雑に解決してしまった。rubocop-rspecについて言うと、無の状態から導入を提案しても合意が取れない可能性が高いので、この手の問題を見つけたときに「ね、こんな問題が解決できるでしょう」という体で提案するのが良いと思います。政治の話をしてしまったかもしれない。&lt;/p&gt;

&lt;p&gt;汎用的なアンチパターンのあるある話だと思ったので、記事に書いておくことにした。またこういう話が出てきたら、適当な粒度で記事にまとめて雑に書いていきたい。こういうツッコミどころの多い文章は、匿名の人々による批判に合いやすく、なかなか書きにくいのだけど、助言の流布ではなく個人の記録という体裁を保つことで、気にせず書いていけたらと良いと思う。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>光る大きいマウスパッドを買った</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-09-16-gaming-mouse-pad"/>
      <id>tag:r7kamura.com,2019:/articles/2020-09-16-gaming-mouse-pad</id>
      <published>2020-09-16T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;RazerのGoliathus Chroma Extendedというマウスパッドを買った。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2020-09-16-gaming-mouse-pad-light.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/2020-09-16-gaming-mouse-pad-light.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;素材がそこそこ柔らかくて、パームレストを置かなくても手首への負担が少し減って嬉しい。ここにキーボードとマウスを置く、という位置取りがはっきりしたことで、何となく収まりが良くなった気がする。何も無いだだっ広い机より、趣があって良いね。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2020-09-16-gaming-mouse-pad.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/2020-09-16-gaming-mouse-pad.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;「光る意味ある？」と最初は思ってて、冗談で買ったんだけど、暗い部屋で使ってみたら結構アガるし、買って良かった。雰囲気はだいぶ良いんだけど、スマホで暗い部屋の様子が上手く撮影できなくて、上の写真では良さが伝わりづらくなってしまったかも。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>文字とコードブロックの色を変えた</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-09-16-color-change"/>
      <id>tag:r7kamura.com,2019:/articles/2020-09-16-color-change</id>
      <published>2020-09-16T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;&lt;a href=&quot;/images/2020-09-16-color-change.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/2020-09-16-color-change.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;コントラストが高すぎてどぎつい感じがしてきたので、テキストの色を &lt;code&gt;#111111&lt;/code&gt; から &lt;code&gt;#333333&lt;/code&gt; に変更した。&lt;/p&gt;

&lt;p&gt;それから、コードブロックが読みにくいと思ったので黒背景に変更。インラインのcode要素はそのまま。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>新しいマイクスタンドを買った</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-09-16-blue-microphones-compass"/>
      <id>tag:r7kamura.com,2019:/articles/2020-09-16-blue-microphones-compass</id>
      <published>2020-09-16T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;&lt;a href=&quot;/images/2020-09-16-blue-microphones-compass.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/2020-09-16-blue-microphones-compass.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Blue MicrophonesのCompassというマイクスタンドを購入して取り付けた。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.bluemic.com/ja-jp/products/compass/&quot;&gt;https://www.bluemic.com/ja-jp/products/compass/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;使わないときに回転させて端の方に追いやっておく…という操作がやりやすく、そういうことをしてもしっかりと角度が保存されている。本体の中に深めのケーブルガイドがあるのも地味に嬉しいところ。&lt;/p&gt;

&lt;p&gt;前まで使っていたものは、どうしてもYetiの重量に耐え切れず、良い感じの角度で止まらないことが多かった。それでも工夫すれば普通に使えてはいたので、前のやつもそこまで悪くはなかったと思う。今はヘッドホンスタンドとして第二の人生を歩み始めてもらっている。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>Mac 標準 動画 サイズ変更 最強</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-09-13-mac-movie-edit"/>
      <id>tag:r7kamura.com,2019:/articles/2020-09-13-mac-movie-edit</id>
      <published>2020-09-13T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;iMovieの話。&lt;/p&gt;

&lt;p&gt;GeForce Experienceの録画機能で、ゲーム中の動画を録画した。録画された200MBほどの動画ファイルの保存先はDropboxになっており、今はたまたまMacでそのファイルを見ているのだが、これを小さいファイルサイズの動画にしてDiscordに貼り付けたい。&lt;/p&gt;

&lt;p&gt;こういうのは新規にフリーソフトを入れる方法を覚えるより、標準の状態でやる方法を覚える方が役に立つことが多い。そこで「Mac 標準 動画 サイズ変更 最強」みたいなキーワードで調べた結果、Macで最初から入っているiMovieがこの用途に適していそうということが分かった。&lt;/p&gt;

&lt;p&gt;iMovieは「プロジェクト」という単位で各動画を管理しているので、まずプロジェクトを新規作成して、そこに編集したい動画を放り込んで、トリミングしたい場合は適当にやって、ファイルに出力するときにカスタムな品質に設定してファイルサイズを調整する、ということをやると良い。&lt;/p&gt;

&lt;p&gt;ちなみに、Windowsだと標準で付いてるフォトで同様のことができて、これも雑に動画編集する上ではたいへん重宝する。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>Terraria Pirate Map AFK Farm</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-09-13-terraria"/>
      <id>tag:r7kamura.com,2019:/articles/2020-09-13-terraria</id>
      <published>2020-09-13T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;Terrariaで&lt;a href=&quot;https://terraria.gamepedia.com/Pirate_Map&quot;&gt;Pirate Map&lt;/a&gt;を放置しながら集めるための狩場について。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/2020-09-13-terraria.png&quot;&gt;&lt;img src=&quot;/images/2020-09-13-terraria.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.reddit.com/r/Terraria/comments/gr6a6i/14_i_made_a_new_afk_arapaima_pirate_map_farm/&quot;&gt;https://www.reddit.com/r/Terraria/comments/gr6a6i/14_i_made_a_new_afk_arapaima_pirate_map_farm/&lt;/a&gt; で紹介されていた方法を真似してみたら上手くいったので、実装で理解できたところについて、後続用にメモを残しておく。ちなみに検証時のバージョンは1.4.0。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;そもそもPirate MapはPirate Invasionというイベントを起こすために必要なアイテムで、Pirate Invasionでは低確率で貴重なアイテムが入手できるため、このイベントは何度も起こす価値がある。そのためにはPirate Mapを沢山集めないといけない。&lt;/p&gt;

&lt;p&gt;しかしPirate Mapのドロップ条件は「Oceanで敵を倒したときに1%の確率でドロップ」というものなので、OceanでPirate Invasionを発生させるようにすれば、少し運が良ければ大体無限に続けられる。なので、狩場をつくってまで何個も集める必要は無いのでは、と最初は思っていた。&lt;/p&gt;

&lt;p&gt;しかししかし、実はPirate Mapの狩場は、Lucky Coinを利用してお金を荒稼ぎする狩場としても再利用できる。そしてLucky CoinはPirate Invasion中に低確率でドロップするアイテムなので、この狩場とシナジーがある。この狩場があると嬉しいのは、そういう背景から。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Terrariaでは、プレイヤーを中心とした168×94タイルの壁またはブロックが無いところに敵が発生する。そのため、狩場をつくるときは最低でもそのくらいの広い空間を用意する。また、見えない部分にもこの範囲内であれば敵が湧いてしまうので、地下の空間等もブロックで埋めておくことが望ましい。この辺の基本的な情報は &lt;a href=&quot;https://terraria.gamepedia.com/Guide:Enemy_farming#Farming_Area&quot;&gt;https://terraria.gamepedia.com/Guide:Enemy_farming#Farming_Area&lt;/a&gt; を読むのが分かりやすい。&lt;/p&gt;

&lt;p&gt;今回はOceanなので、画面端の方で海底を掘ったり埋めたりしていい感じに平坦な空間を用意することになる。ちなみに砂を掘るときは、最序盤から手に入る超絶便利ツール &lt;a href=&quot;https://terraria.gamepedia.com/Gravedigger%27s_Shovel&quot;&gt;Gravedigger&#39;s Shovel&lt;/a&gt; を使うと効率がとても良い。&lt;/p&gt;

&lt;p&gt;近くにNPCが居ると敵が湧きづらくなってしまうので、狩場の近くにNPCは配置しない。&lt;/p&gt;

&lt;p&gt;ダンジョンで見つかる&lt;a href=&quot;https://terraria.gamepedia.com/Water_Candle&quot;&gt;Water Candle&lt;/a&gt;を近くに配置すると、敵がよく湧いて効率が良くなる。他に、Heart LanternやCampfireなんかがあると、体力自動回復効果が促進されて事故が起こりにくくなる。Wrathなんかは壁を貫通して襲ってくるので、基本的に召喚装備で対応するのだけど、他の敵の対処で忙しいと倒し切る前に攻撃されることもある。&lt;/p&gt;

&lt;p&gt;水中の敵は、自分が水中に居て、かつ視界が通っているときにしか寄ってこない。しかし水中では呼吸が出来なくて死んでしまうし、直接敵が寄ってこられる経路があると放置してると死んでしまう。よって、水面に軽く触れる程度のところに立ち、敵が通れないながらも視界は通る程度の穴を開けておくのが望ましい。&lt;/p&gt;

&lt;p&gt;Party Girlが売ってくれるBubbleを使うと、プレイヤーや敵が通過することが出来るが、水没はしないという空間をつくることができる。この性質を利用すると、今回のように海底にゾンビ対策用の溶岩を敷いたり、魚を水中に閉じ込めるための空間を用意したりできる。魚のジャンプ力は低いので、この程度の高さがあれば下から攻撃されることはない。&lt;/p&gt;

&lt;p&gt;既に水があるところにBubbleを埋め込むようにして配置しても上手くいかないので、予め適当なブロックで真空状態をつくってバケツか何かで内部の水を抜いたあとでBubbleを配置するという手間は必要になると思う。&lt;/p&gt;

&lt;p&gt;今回狙う&lt;a href=&quot;https://terraria.gamepedia.com/Arapaima&quot;&gt;Arapaima&lt;/a&gt;という魚の敵はジャングルバイオームにしか沸かないので、付近に140タイル分のジャングル用ブロックを設置してジャングル化させる。ちなみにこのブロックは、繋がったMud BlockにJungle Grass Seedを適当に植えることで生成できる。&lt;/p&gt;

&lt;p&gt;今回自分はHardmode突入直後を想定して実装することにしたので、紹介されているものと違い、Teleportが用意されていない。また、Templeにはまだ行けないのでトラップもDart Trapしか使えない。なので、敵は召喚装備で倒すことになる。そうなると敵が勝手に遠くで倒されてしまうことになるので、放置ではなかなかドロップアイテムが集まりにくかったりする。強いトラップを入手すれば将来的に解決できる問題ではある。&lt;/p&gt;

&lt;p&gt;今回の設計だと、近くで倒してもアイテムが拾えない範囲が出てくるので、Treasure Magnetを装備するのが望ましい。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>ActiveRecord::EnumのI18n</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-09-12-activerecord-enum-translation"/>
      <id>tag:r7kamura.com,2019:/articles/2020-09-12-activerecord-enum-translation</id>
      <published>2020-09-12T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;ActiveRecordのenumにI18n用の機能を提供するgemをつくった。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/r7kamura/activerecord-enum_translation&quot;&gt;https://github.com/r7kamura/activerecord-enum_translation&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;どういうものか&lt;/h2&gt;

&lt;p&gt;Userがenumを利用したstatusというカラムを持っているとすると、I18n用の辞書としてこういう風なデータを用意しておけば…&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;yaml&quot;&gt;ja:
  activerecord:
    attributes:
      user:
        name: 名前
        status:
          active: 利用中
          inactive: 停止中
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次のようにメソッドを呼び出すことで、翻訳された辞書が利用できるようになる、というやつ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;user.human_enum_name_for(:status) #=&amp;gt; &quot;利用中&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;技術的な難題の解決とかは全く狙っていなくて、どちらかと言うと、この手の仕組みにルールが無くてアプリ内のいろんなところにこれ系のいろんな実装が書かれがちなので、決まりを用意して仕組み化しましょうというのだけを狙って書いてみたところが大きい。&lt;/p&gt;

&lt;h2&gt;ある程度コード量が増えても良いので明示的にやる&lt;/h2&gt;

&lt;p&gt;同じ問題を解決するためのgemとして、昔からenum_helpというものがあるので、これを使っても良い。あとここでは紹介しないけれど似たようなものが幾つかあります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zmbacker/enum_help&quot;&gt;https://github.com/zmbacker/enum_help&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;解決策としてもちろん知ってはいたのだけれど、個人的にはあまり気に入らなくて、別のものを自作してしまった。せっかくだから、気に入らなかったところなどについて書いてみる。&lt;/p&gt;

&lt;p&gt;例えば、何もしなくても済むようにデフォルトでわりと色々な機能を用意してくれる結果、コード中に足掛かりが何も生まれないところとかは、長年さまざまなRailsアプリの面倒を見てきた結果、かなり嫌いな要素になっている。&lt;/p&gt;

&lt;p&gt;enum_helpも、Railtieを利用して、ActiveRecord::Baseに勝手にmoduleをincludeして、&lt;code&gt;enum&lt;/code&gt; を上書きして、enum利用時に勝手に便利メソッドが追加で生える…という、まあRails用のプラグインとしてはよくある仕組みで実装されているのだけど、できる限りこういうのも明示的にやりたい。&lt;/p&gt;

&lt;p&gt;ライブラリ側はmoduleを提供するので、ユーザにはそれをincludeしてもらって、includeするということはインスタンスメソッドが提供されるということが想定できて、想定通り単純で素直なインスタンスメソッドが提供される。それも何かマジカルな仕組みで動的に定義されたメソッドとかではなく普通のものが提供される。そういう単純な感じであってほしい。&lt;/p&gt;

&lt;p&gt;とはいえ便利なメソッドが動的に定義される方が便利やん、という意見があり、例えば前述のコードは以下のように引数の不要な形で書けるともっと嬉しい。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;user.human_enum_name_for_status #=&amp;gt; &quot;利用中&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;今回書いたやつでは、こういうのが欲しいときは &lt;code&gt;human_enum_reader_for&lt;/code&gt; というメソッドでわざわざ宣言させるようにしている。まあこの特異メソッドが呼び出せるようにするために、結局include時に若干マジカルなことをしてはいるんだけども。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;class User &amp;lt; ApplicationRecord
  enum status: %i[active inactive]
  human_enum_reader_for :status
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こういう風に明示的にしておくと何が良いかというと、例えばこの機能から撤退しようということになったときに、「アプリ内の全てのこの機能について使われてるかどうか調べなきゃいけないじゃん……ほぼ無理だろ……」と途方に暮れる可能性が少しだけ減って、使われてそうなところに当たりがつけられるようになるので、少し希望的になる。今回の例について言えばまだなんとかなったりする範疇なので、言いたいことの例としてあまり良いものではないんだけど、まあなんか言わんとしてることは伝わってほしいです。&lt;/p&gt;

&lt;h2&gt;既存の翻訳辞書との兼ね合い&lt;/h2&gt;

&lt;p&gt;他に気になるところとして、既存の翻訳辞書に新たにenum用の値を追加するときに、例えばこういう定義場所が離れるような感じにしたくないという気持ちが少しあった。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;yaml&quot;&gt;ja:
  activerecord:
    attributes:
      user:
        name: 名前
  enums:
    user:
      status:
        active: 利用中
        inactive: 停止中
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これはかなり単純化された例なので、実際にはattributesのところに既存の項目が沢山並んでいて、実際にはenum用のデータはかなり遠く離れたところに置かれることになる感じ。&lt;/p&gt;

&lt;p&gt;まあそれでも賛否両論あると思っていて、既存の辞書内にenum用の値を上手く忍ばせているせいで、逆にこのgemを廃止してenum用のデータだけ取り除きたくなったときに「もはやenum用のものかどうか分からん状況になっとるやんけこいつセンスねえな」と思うケースもあるかも。&lt;/p&gt;

&lt;p&gt;普段Railsのコード読んでて勘の良い人なら実装読むと分かると思うけど、今回書いたやつはほぼActiveModel::Translationの仕様と実装に寄せて書いている。&lt;/p&gt;

&lt;p&gt;仕様についてどの辺が寄せられているかというと、(READMEには書いてないけど) 例えば全てのモデルについてのデフォルト値を書きたい場合は以下のように書けたりもするし、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;yaml&quot;&gt;ja:
  attributes:
    status:
      active: 利用中
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;直接のクラス名について該当する翻訳が無かった場合は親クラスに遡ったりもするし、何も無かった場合は &lt;code&gt;String#humanize&lt;/code&gt; で代替の値が用意されたりするし、defaultオプションでその値を外から指定できたりもする。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>VSCodeで自動で補完候補を出すのを無効化した</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-09-11-vscode-disable-suggestion"/>
      <id>tag:r7kamura.com,2019:/articles/2020-09-11-vscode-disable-suggestion</id>
      <published>2020-09-11T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;VSCodeで文字を入力している最中に「もしかしてこれじゃない？」って補完候補をポップアップしてくれるやつがすごく鬱陶しいので、無効化した。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;json&quot;&gt;{
  &quot;editor.suggestOnTriggerCharacters&quot;: false,
  &quot;editor.quickSuggestions&quot;: {
    &quot;other&quot;: false,
    &quot;comments&quot;: false,
    &quot;strings&quot;: false
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;検索すればすぐ出てくるけど、settings.json に上のような設定を追加しただけ。ちなみに能動的に補完候補を表示するには、Mac版だとデフォルトでは &lt;code&gt;Ctrl + Space&lt;/code&gt; で出せる。&lt;/p&gt;

&lt;p&gt;思えば前にAtomを利用していたときも無効化したし、その前のVimを使っていたときも無効化した気がする。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;そういえば、このサイトの記録を辿る限りでは、2020年3月にAtomからVSCodeに移行したらしい。移行してから半年が経ったことになる。Vimモードからの脱却も同時にやったので、離脱症状が出るかと思いきや、意外と難なく乗り切れて本当に良かったと思う。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>近況</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-04-18-diary"/>
      <id>tag:r7kamura.com,2019:/articles/2020-04-18-diary</id>
      <published>2020-04-18T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;最近について。&lt;/p&gt;

&lt;h2&gt;AtomからVSCodeへ&lt;/h2&gt;

&lt;p&gt;利用するエディタをVSCodeに移行して1ヶ月が経った。また、AtomではVimモードで利用していたけれど、VSCodeではそういうものを使うのもやめた。&lt;/p&gt;

&lt;p&gt;そこまでVimの機能に強く依存している訳ではなかったせいか、意外と簡単に移行できてしまって驚いたくらい。意図的に、Vimの機能に依存しないようにしていたところもあるかもしれない。&lt;/p&gt;

&lt;h2&gt;Railsアプリを良い感じにする仕事&lt;/h2&gt;

&lt;p&gt;依然として、3年ほどフリーランスでRubyやJavaScriptの仕事をやっている。Railsのアップグレード屋として仕事をもらうことが多く、ここ1年では20個ぐらいのRails 4〜5のアプリをRails 6に移行したと思う。&lt;/p&gt;

&lt;p&gt;とはいえ、Railsのアップグレードをやるという話で仕事を請けるものの、実際には「Railsを利用しているプロダクトに参加して、とにかく全体的にDXを良くしていく人」として動いていることが多い。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CI環境を改善する&lt;/li&gt;
&lt;li&gt;Docker環境をまともにする&lt;/li&gt;
&lt;li&gt;Railsの起動を高速化する&lt;/li&gt;
&lt;li&gt;RuboCopの問題に一通り対応する&lt;/li&gt;
&lt;li&gt;Controllerの実装を読み解いて足りないテストを追加する&lt;/li&gt;
&lt;li&gt;設定値の管理方法を改善する&lt;/li&gt;
&lt;li&gt;assetsのコンパイル方法を変更する&lt;/li&gt;
&lt;li&gt;Railsを含めて色々なライブラリをアップデートする&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;とか、そういう感じである。この辺を並行して整えていった方が、結果的に早く、かつ安全にRailsをアップグレードできるため。&lt;/p&gt;

&lt;p&gt;最近請けている仕事の多くが一段落付きつつあるので、週2日程度で、Railsアプリの開発環境やライブラリアップデート等の、いわゆる非機能開発な部分の面倒を見てほしいという組織があればお声がけください。&lt;a href=&quot;https://twitter.com/r7kamura&quot;&gt;Twitter&lt;/a&gt;が1番連絡付きやすいです。&lt;/p&gt;

&lt;h2&gt;最近のゲーム活動&lt;/h2&gt;

&lt;p&gt;『あつまれ どうぶつの森』を1ヶ月で200時間ほどやり込んでしまった。そろそろ飽き気味で、惰性でやってしまっているところがあるので、どこかで終わりにしたい。&lt;/p&gt;

&lt;p&gt;『ファイナルファンタジーVII リメイク』はめちゃくちゃ良い。FF1〜10あたりは個人的に好きすぎてもはやどういう形のものが出てきても喜んでしまうところがあるけれど、それは抜きにしても今回のFF7Rの出来はすごい。段々と終盤に近付いてきてしまっている雰囲気を感じており、勿体なくてあまり進められずにいる。&lt;/p&gt;

&lt;p&gt;『リングフィットアドベンチャー』は依然として毎日20分から30分程度プレイし続けている。今日でプレイを初めて130日目になった。次の目標は200日継続。もうちょい使うスキルを工夫して身体を追い込みたい。&lt;/p&gt;

&lt;p&gt;『BLUE PROTOCOL』のクローズドβテストに来週参加予定なのもちょっと楽しみ。&lt;/p&gt;

&lt;p&gt;『PUBG』も何故か最近またやっている。最近になってようやくリコイル制御が人並みにできるようになってきた気がする。FPS/TPSジャンルだと、『Apex Legends』『Fortnite』あたりは最近はほぼやらなくなってしまった。&lt;/p&gt;

&lt;h2&gt;趣味のプログラミング&lt;/h2&gt;

&lt;p&gt;Rustの勉強をしようと思って、エディタをつくったり、Cコンパイラをつくったりしている。まだまだ分からないことだらけ、というかやったことがないことだらけで楽しい。&lt;/p&gt;

&lt;p&gt;Cコンパイラは &lt;a href=&quot;https://github.com/r7kamura/r8cc&quot;&gt;https://github.com/r7kamura/r8cc&lt;/a&gt; でつくっている。まだifやwhile等の基本的な制御構文が実装できたぐらいのもので、型も関数も使えない、初歩の初歩の段階。&lt;/p&gt;

&lt;h2&gt;生活の様子&lt;/h2&gt;

&lt;p&gt;2020年1月1日から2020年4月18日まで、合計でまだ20回程度しか外出していないと思う。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;外食が2回&lt;/li&gt;
&lt;li&gt;打ち合わせが1回&lt;/li&gt;
&lt;li&gt;週に1度、通院後に食材の買い出し&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;毎日Discordで適当に雑談してるおかげか、そもそもが引きこもりな性格なせいなのか、1人で気楽に生きているせいなのか、ストレスが全く溜まらなくて助かる。&lt;/p&gt;

&lt;p&gt;先月にホットサンドメーカーを買って以来、毎朝ホットサンドを焼いている。たまに焦がして失敗するけど、肉と野菜とパンとチーズが1食でいい感じに取れるので気に入っている。文字通り鉄板である。&lt;/p&gt;

&lt;p&gt;あとは鍋、カレー、パスタを食べ続けている。最近はホットクックで低温調理をやるのが楽しい。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>『マルコと銀河竜』をやった</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-02-28-marcotogingaryu"/>
      <id>tag:r7kamura.com,2019:/articles/2020-02-28-marcotogingaryu</id>
      <published>2020-02-28T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;&lt;a href=&quot;/images/2020-02-28-marcotogingaryu.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/2020-02-28-marcotogingaryu.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;前々から気になってた『マルコと銀河竜』が遂に発売されたので、購入してそのままエンディングまで駆け抜けてしまった。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://uyragnigotocr.am/&quot;&gt;https://uyragnigotocr.am/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;面白いゲームを終わらせると、おいしいものを食べたあとに似た満足感と寂しさが残る。&lt;/p&gt;

&lt;p&gt;とにかくテンポ良く話が進んでいって、その先にどんどん吸い込まれていってしまう。言葉や演出の端々にいろんな作品へのオマージュが利いていて、そこでいちいち笑わせられるのも良かった。個人的には、泥棒をトレジャーハンターと言い直すシーンが好き。&lt;/p&gt;

&lt;p&gt;数時間でクリアしてしまったけれど、凝縮されたグラフィックとテキストと音の中を駆け抜けた数時間の冒険だった。退屈という言葉の反対側にある作品だと思う。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>2019年分の確定申告をやった</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-02-25-kakutei"/>
      <id>tag:r7kamura.com,2019:/articles/2020-02-25-kakutei</id>
      <published>2020-02-25T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;2019年分の確定申告書類を提出した。今年で3年目。今年も郵送。予定納税分以外の税金の払込はこれから。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1年目: 窓口で提出&lt;/li&gt;
&lt;li&gt;2年目: 郵送で提出&lt;/li&gt;
&lt;li&gt;3年目: 郵送で提出&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回は2月18日に郵送したのだけど、書類の押印とマイナンバー記入を忘れるという不備があり、2月25日に再提出した。受付期間内であれば、最後に提出したものが利用されるらしい。そしてこの再提出行為には、訂正申告という名前が付いているらしい。&lt;/p&gt;

&lt;p&gt;今年も経費はほぼ無くて、経費と控除に含んだものと言えば、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;家賃&lt;/li&gt;
&lt;li&gt;電気代&lt;/li&gt;
&lt;li&gt;通信費&lt;/li&gt;
&lt;li&gt;国民健康保険の控除&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ぐらいのものだった。もうちょっと頑張れば経費に出来そうなものが幾らかありそうだけど、その労力で働いた方が収支は相当プラスになるのではという気持ちが強く、なかなか頑張れない。&lt;/p&gt;

&lt;p&gt;今年は計上や印刷や郵送などに合計2時間ぐらい掛かった。2019年中に、経費に計上する支払いに利用する銀行口座を全て一箇所にまとめたりしたので、来年の計上はもう少し楽になるかも。しかし次回から消費税の納税も始まってしまう…。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>マイプロテインのプロテインを買った</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-02-17-my-protein"/>
      <id>tag:r7kamura.com,2019:/articles/2020-02-17-my-protein</id>
      <published>2020-02-17T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;&lt;a href=&quot;/images/2020-02-17-my-protein.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/2020-02-17-my-protein.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;マイプロテインというスポーツ栄養ブランドのホエイプロテインが送料無料で1kg 1890円だったので、チョコレートブラウニー味のやつを買ってみた。&lt;/p&gt;

&lt;p&gt;実は去年末から &lt;a href=&quot;https://github.com/sponsors/r7kamura&quot;&gt;https://github.com/sponsors/r7kamura&lt;/a&gt; でスポンサーしていただいているお金が幾らかある。これの使い道を考えていたのだけど、筋肉にするのが良いだろうと思い、このお金でプロテインを買っていくことにした。&lt;/p&gt;

&lt;p&gt;毎日朝食後に30分ぐらいリングフィットアドベンチャーをやっていて、以前までは運動後に気分次第でゆで卵を食べていたのを、代わりにプロテインを飲むようにした。&lt;/p&gt;

&lt;p&gt;味はかなり美味しい。牛乳で割って飲んでいる。1画面に入り切らないぐらい味の選択肢があってすごい。チョコレートブラウニー味は、カントリーマアムのココア味を食べながら牛乳を飲んでるみたいな味。ダイエット効果や筋肥大がどうとかはあまり考えて無くて、普通に甘くて美味しいし、昼食までのつなぎにちょうど良い。&lt;/p&gt;

&lt;p&gt;自分は粉っぽさが無くなるまで振るのが面倒なので、最近は&lt;a href=&quot;https://www.amazon.co.jp/dp/B07W98PD4X&quot;&gt;安めの電動ミキサー&lt;/a&gt;で数秒かき混ぜて飲んでるんだけど、プロテインに付属しているボール付きシェイカーもわりと使いやすいと思う。&lt;/p&gt;

&lt;p&gt;これまでなんかガチっぽい感じがしてプロテインを飲む習慣は持ってなかったけど、普通に美味しいというだけで飲む気になれて良かった。「せっかく運動したのに次の食事まで時間が空いてしまった…」ということが以前にも何度かあったので、そういうのが無くなるというのは良いですね。運動のタイミングと食事のタイミングをそこまで合わせなくても良くなるので、自由度が上がるというのも良い。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.myprotein.jp&quot;&gt;https://www.myprotein.jp&lt;/a&gt; の友達紹介コード &lt;code&gt;KANV-R3&lt;/code&gt; があるので貼っときます。友達じゃなくても使って大丈夫です。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>『ファイアーエムブレム 風花雪月』をやった</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-02-10-fe-three-houses"/>
      <id>tag:r7kamura.com,2019:/articles/2020-02-10-fe-three-houses</id>
      <published>2020-02-10T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;&lt;a href=&quot;/images/2020-02-10-fe-three-houses.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/2020-02-10-fe-three-houses.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ようやく3つの学級をクリアしたので感想を書ける。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.nintendo.co.jp/switch/anvya/pc/index.html&quot;&gt;https://www.nintendo.co.jp/switch/anvya/pc/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;特にシリーズ未プレイの人におすすめの作品なので、この機会に是非やってほしい。この記事では感想を書いているけれど、ネタバレ的な要素は多分無いはず。&lt;/p&gt;

&lt;h2&gt;ストーリーについて&lt;/h2&gt;

&lt;p&gt;魅力的で個性的な、数十人のキャラクター達。プレイヤーの選択に応じ、教練や戦闘を通じ徐々に変化していく人間関係。その数十人が互いに掛け算で生み出す膨大なエピソードの量が凄まじかった。&lt;/p&gt;

&lt;p&gt;3つの学級の視点で描かれるストーリーもなかなか重厚。将来のために教育を受ける希望的な若者達の姿が描かれる一方で、それぞれの人間の悲惨な末路も描かれることになる。&lt;/p&gt;

&lt;p&gt;発売前、ファイアーエムブレムの次回作が学園モノと聞いて少し不安になっていたのを覚えている。いざ蓋を開けてみれば、これぞ自分の求めていたものという感じで安心した。&lt;/p&gt;

&lt;p&gt;全ての登場人物を同時に救済するような術が存在せず、どの勢力と敵対するかというハードな選択がプレイヤーに委ねられるところや、古の英雄や紋章、女神といったファンタジー要素がきちんと物語に深く関わっているところなんかは、これまでのシリーズへのリスペクトを感じるところ。一方で、紋章ありきなこれまでの貴族制度への批判や、面白どころだと、天から降り注ぐ近代兵器、EDM鳴り響く謎の地下都市など、新しい風が吹いているように感じるところもあった。これら盛り沢山な要素が破綻無くまとめあげられているバランス感覚がマジですごい。&lt;/p&gt;

&lt;p&gt;なんやかんやあって結局合計200時間近くプレイしたことになる。惜しい点として、複数のルートをプレイして長く遊べるゲームな一方で、二周目、三周目となってくると、散策パートの繰り返しが冗長に感じることも多かった。とはいえ、各ルートでエンディングを迎えると、それまでの苦労はすべて癒やされてしまうから不思議だ。このエンディングを見るためにプレイしてきたような気がする。ファイアーエムブレムのテーマの使い方が本当に上手い。&lt;/p&gt;

&lt;h2&gt;戦闘や育成について&lt;/h2&gt;

&lt;p&gt;今も昔も、ファイアーエムブレムの戦闘は自分で物語をつくっている感覚が楽しい。今作は使えるキャラクターの自由度が高いこともあって、戦闘面での楽しみも増している。各学級ごとに本当にバランスよく人材が配置されていて、それでいて学級ごとに個性もある。&lt;/p&gt;

&lt;p&gt;戦闘面の難易度設計も非常に良かった。最高難易度のルナティックまでいくと相当に手強いものの、ただ単に能力値だけ引き上げたというような理不尽さではなく、思考と努力に応えてくれる設計になっていて、よく出来たパズルゲームのような体験があった。慣れてきた頃に、引き継ぎありでやってみてほしい。引き継ぎ無しでルナティックをやるのは、レベリングや支援上げに作業感があり、正直ちょっとマゾい。&lt;/p&gt;

&lt;p&gt;今作は天刻の拍動 (戦闘中に何度か時間を巻き戻せる仕組み) の存在でヌルゲーと化したらどうしようと思っていたけれど、乱数のシードが常に固定されていることもあり、実際にプレイしてみた感触では寧ろかなり好意的に捉えるようになった。もしこの仕組みが無かったとしても、結局は失敗するたびにセーブした箇所からやり直すだけである。自分の時間を無駄にするリスクを秤にかけながらプレイするような緊張感は苦痛でしかないし、この仕組みによって、純粋に戦略パズルとしての思考に集中できるようになったと思う。&lt;/p&gt;

&lt;h2&gt;おわり&lt;/h2&gt;

&lt;p&gt;総じて傑作だった。去年2学級分だけ終わらせて力尽きていたのを、気合を入れて再開できて本当に良かった。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>『ボイド・テラリウム』をやった</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-01-27-void-trrlm"/>
      <id>tag:r7kamura.com,2019:/articles/2020-01-27-void-trrlm</id>
      <published>2020-01-27T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;&lt;a href=&quot;/images/2020-01-27-void-trrlm.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/2020-01-27-void-trrlm.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;日本一ソフトウェアの『void tRrLM(); // ボイド・テラリウム』をやった。たまごっちと不思議のダンジョンを同時にやるような作品で、終末世界で見つけた女の子のお世話をしながら、ダンジョンを探索して食糧や建築資材を集めてくることになる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://nippon1.jp/consumer/trrlm/&quot;&gt;https://nippon1.jp/consumer/trrlm/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;100点満点で点数を付けるなら、20点。他人にはおすすめできない。テラリウム周りのアートワークは良いけれど、語りがチープで勿体ないし、システムは不具合だらけで、出来は相当に酷い印象だった。&lt;/p&gt;

&lt;p&gt;ゲームは頻繁にエラーで強制終了するし、大事なボス戦でアイテムもスキルも使えなくなる不具合が出るし、ラストバトルで操作を受け付けなくなって、ゲームを終了するしかなくなるような問題も起きた。クリアまで漕ぎ着けられて良かったと思う。レスポンスもやけに悪く、操作も快適とは言い難い状況だった。風来のシレンなどの不思議のダンジョン系の操作感と比較してはいけない。&lt;/p&gt;

&lt;p&gt;良いところ探しをすると、レベルアップ時にランダムなスキルが発現するシステムはとても良かった。『Slay the Spire』でデッキを組むときのような楽しさがある。このゲームで最も光っている点がこれ。ストーリー上で、ロボットがランダムに進化していく設定への裏付けなどがあるともっと嬉しかったかもしれない。&lt;/p&gt;

&lt;p&gt;それから、FF14でハウジング要素をそこそこやり込んでいたせいか、テラリウムの内装を飾り付けられる機能はとても楽しめた。苔や花、岩や家具などをかなり細かく設置でき、自分で箱庭を演出できる。儚げで美しいアートワークや世界設定と相まって、雰囲気のあるテラリウムを組み立てられる。自己満足であることを薄々自覚しつつ、愛玩用に動物を飼うことについて感じるような居心地の悪さを覚えながらも、せめてこの子が楽しく過ごせるようにと工夫を凝らしているときの感覚はたまらない。&lt;/p&gt;

&lt;p&gt;しかし全体を振り返ってみると、光る要素が何個もあるものの、どれもいまいち上手く相互作用しておらず、重ねてシステムの酷い出来栄えで全てが台無しになっている、惜しい作品だと感じた。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>『十三機兵防衛圏』をやった</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-01-23-13sar"/>
      <id>tag:r7kamura.com,2019:/articles/2020-01-23-13sar</id>
      <published>2020-01-23T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;先週末からやっていた『十三機兵防衛圏』を遂にクリアした。思い出しのために、ネタバレを避けつつ歯切れの悪い感想を残しておく。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://13sar.jp/&quot;&gt;https://13sar.jp/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;面白い映画を十数本立て続けに見ているような、しかしながらゲームとして表現される必然性がある、そういうような作品だった。個人的にはほぼ百点満点の出来。間違い無く一つのリファレンスとなる作品になっただろうし、今後出るゲームがこの作品と比較されることを考えると、少し可哀想になる。それぐらい良かった。&lt;/p&gt;

&lt;p&gt;振り返ってみると、音楽面に意外と大きくプレイ体験を支えられていたと思う。挿入歌の完璧な演出は勿論のこと、BGMによって「そういうシーン」だと一瞬でわからされる場面が多く、物語に入り込みやすかった。クリア後にサウンドディレクターを調べてみたところ、崎元仁さん (代表作に『伝説のオウガバトル』『ファイナルファンタジーXII』『戦場のヴァルキュリア』他多数) が関わっていることが分かり、納得感があった。&lt;/p&gt;

&lt;p&gt;クリアした今でも、挿入歌の入るシーンは何度もプレイしたくなってしまう。あれは超時空要塞マクロスのリン・ミンメイを意識したものなんだろうと勝手に思っている。こういう調子で、作中は色々なSF作品を意識しているであろう素材がてんこ盛りで、やりたいことを全部やっているなという印象を受ける。SF好きな人ほど余分に楽しめるはず。&lt;/p&gt;

&lt;p&gt;これだけの素材を完璧に料理しきっている手腕にも、驚きを隠せない。全体を通して綻び無く仕上がっているところも、プレイ後の満足感に大きく貢献していて、爽やかな気持ちで振り返ることができる。そう、プレイ後の気持ちを「爽やか」という言葉が一番よく表せていると思う。これだけの作品が生まれるのは奇跡のようなことなので、もっと多くの人にプレイされてほしい。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>『なめらかな世界と、その敵』を読んだ</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-01-21-nameteki"/>
      <id>tag:r7kamura.com,2019:/articles/2020-01-21-nameteki</id>
      <published>2020-01-21T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;&lt;a href=&quot;https://images-fe.ssl-images-amazon.com/images/I/51osytbqqVL.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://images-fe.ssl-images-amazon.com/images/I/51osytbqqVL.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;伴名 練の『なめらかな世界と、その敵』を読んだ。表題作に加えて、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;『ゼロ年代の臨界点』&lt;/li&gt;
&lt;li&gt;『美亜羽へ贈る拳銃』&lt;/li&gt;
&lt;li&gt;『ホーリーアイアンメイデン』&lt;/li&gt;
&lt;li&gt;『シンギュラリティ・ソヴィエト』&lt;/li&gt;
&lt;li&gt;『ひかりより速く、ゆるやかに』&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;の計6篇の話が含まれている。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/B07WHSZMFC&quot;&gt;https://www.amazon.co.jp/dp/B07WHSZMFC&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SF的な世界観が土台にありつつも、繊細に描写された人の感情が話の核となっていて、どれも読み応えがあった。それに、どの話も読み手への優しさを感じる文章だった。最近読んできたSF作品の中でも、かなり読みやすい方だと思う。&lt;/p&gt;

&lt;p&gt;昨日から始めた『十三機兵防衛圏』も序盤の雰囲気だけで相当期待できそうな作品だし、ここ最近は良い作品に沢山巡り会えて本当に嬉しい。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>『ライザのアトリエ 〜常闇の女王と秘密の隠れ家〜』をやった</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-01-19-atelier-ryza"/>
      <id>tag:r7kamura.com,2019:/articles/2020-01-19-atelier-ryza</id>
      <published>2020-01-19T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;&lt;a href=&quot;/images/2020-01-19-atelier-ryza.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/2020-01-19-atelier-ryza.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ライザのアトリエがSteamで30%オフで売られていたので、購入した勢いで一気にクリアした。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://store.steampowered.com/app/1121560/_/&quot;&gt;https://store.steampowered.com/app/1121560/_/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;とにかく初心者に優しい印象を受けた。実はアトリエシリーズの作品は今作が初プレイだったので、このゲームを選んでプレイすること自体も一種の冒険ではあった。振り返ってみると、全体を通してかなり良い体験ができたと思う。ゲーム内で出てくる要素の個々の説明がとても丁寧、かつプレイに関してもかなりの親切設計で、この割り切り方も好印象。錬金術のシステムも謎の中毒性があって良かったし、デス・ストランディングで配達依存症にかかっていたせいか、街の人々のお願いを聞くクエスト群も悪くなかった。&lt;/p&gt;

&lt;p&gt;個人的に一番印象深かったのは、リアルタイムの戦闘で仲間から協力の指示が飛んでくるシステムで、初めてライザに話しかけられたところ。物語中、基本的には主人公であるライザを操作して進めることになるので、自分=ライザという視点で物語に入り込んでしまう。しかし戦闘時、ふと操作対象を別のキャラクターに切り替えてみると、今度は逆に、主人公から自分に話しかけられる構図になる。それまでの自分から自分に話しかけられるという展開に少しドキッとする一方で、いま操作しているそのキャラクターが主人公で、隣にライザが居るという物語もあるのだなと、ふとした瞬間に感じさせられる、良い演出だった。&lt;/p&gt;

&lt;p&gt;台詞回しについて、作中で発せられる「冒険は、楽しいことや嫌なことに出会う俺のもので、他人に認めてもらうためのものじゃない」という言葉がかなり気に入っている。世界からするとちっぽけな、しかし当人からすると大きな一つの達成を迎えた後に発せられるその言葉は、この物語や、この作品のプレイヤーの物語にまで言及しているようで、心に残る一言だった。&lt;/p&gt;
</content>
    </entry>
  
    <entry>
      <title>『最後にして最初のアイドル』を読んだ</title>
      <link rel="alternate" type="text/html" href="https://r7kamura.com/articles/2020-01-12-gen-gen-kusano"/>
      <id>tag:r7kamura.com,2019:/articles/2020-01-12-gen-gen-kusano</id>
      <published>2020-01-12T00:00:00+00:00</published>
      <updated>2020-09-19T00:16:52+00:00</updated>
      <content type="html">&lt;p&gt;&lt;a href=&quot;https://images-fe.ssl-images-amazon.com/images/I/615-PsNiAsL.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://images-fe.ssl-images-amazon.com/images/I/615-PsNiAsL.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;新人SF作家 草野原々による短編集『最後にして最初のアイドル』を読んだ。表題作に加え、『エヴォリューションがーるず』と『暗黒声優』の計三篇が含まれている。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/B0798S7N12&quot;&gt;https://www.amazon.co.jp/dp/B0798S7N12&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;評判は前々から目にしており、相当気になってはいたのだけど、最近読書のための時間が取れるようになってきて、ようやく読むことができた。期待通り、圧巻の出来だった。これはもっと早く読んでおけば良かった。&lt;/p&gt;

&lt;p&gt;世界の果てまで届かんばかりに力強く風呂敷を拡げていく勇猛さにはもはや安心感すら覚え、拡げまくった風呂敷を三次元に精巧に折り畳んでいく様にもまた舌を巻かされた。何より、至るところに埋め込まれたシニカルな笑いの種と、それら全体を繋ぐ文章力の高さが、道中まるで飽きさせない。&lt;/p&gt;

&lt;p&gt;作者と同じ時代を生きられていることに幸せを感じる。これから出る作品も楽しみだ。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Apple Smart Keyboard Folioを購入し、昨日からiPad Proを使って文章を書いている。この文章もそう。メモ帳に下書きを書いたあと、GitHubのテキストエリアにコピペして、最後に少しだけ手直ししている。かなり体験が良い。&lt;/p&gt;

&lt;p&gt;打鍵感も悪くないし、複数のアプリケーションを行き来しづらい分、目の前の作業に集中できる。これなら全然iPadだけで作業が完結するし、何なら文章を書く作業だけなら、MacよりiPadの方が良いまである。&lt;/p&gt;
</content>
    </entry>
  
</feed>
